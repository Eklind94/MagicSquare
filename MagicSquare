//Johannes Eklind joheki2 - Uppgift 5 - Labb 5.  - 2023-03-20.

public class NumberSquare {
    public static void main(String[] args) {

        int tempSum = 0;
        int tempPreviousSum = 0;
        int magicSquareCounter = 0;
        boolean squareChecker = false;

        //Checks if input is suitable for a table
        for (int i=1; i*i<=args.length; i++) {
            if ((args.length % i == 0) && (args.length / i == i)){
                squareChecker = true;
            }
        }
        if (!squareChecker){
            System.out.print("Not a number square!");
            System.exit(0);
        }

        //declare multidirectional array & Save user input in array
        int side = (int) Math.sqrt(args.length);
        int[][] box = new int[side][side];
        for ( int i = 0; i < side; i++ ){
            for ( int j = 0; j < side; j++ ){
                box[i][j] = Integer.parseInt(args[i*side + j]);
            }
        }

        //Print input and rightside sums
        for ( int i = 0; i < side; i++ ){
            for ( int j = 0; j < side; j++ ){
                System.out.printf("%3d",box[i][j]);
                tempSum += box[i][j];
            }
            System.out.print(" | ");
            System.out.println(tempSum);

            //checks if the sum is equal to the previous sum, if yes, increments counter.
            if (tempSum == tempPreviousSum){
                magicSquareCounter++;
            }
            tempPreviousSum = tempSum;
            tempSum = 0;
        }

        //Print and calculate bottom sums
        for ( int i = 0; i < side; i++ ){
        System.out.print("---");
        }
        System.out.println();
        for ( int j = 0; j < side; j++ ){
            for ( int i = 0; i < side; i++ ){
                tempSum += box[i][j];
                }
            System.out.printf("%3d",tempSum);

            //checks if the sum is equal to the previous sum, if yes, increments counter.
            if (tempSum == tempPreviousSum){
                magicSquareCounter++;
            }
            tempPreviousSum = tempSum;
            tempSum = 0;
        }
        System.out.println();

        //Print and calculate diagonal 1
        for ( int i = 0; i < side; i++ ) {
            for (int j = 0; j < side; j++) {
                if (i == j) {
                    tempSum += box[i][j];
                }
            }
        }
        System.out.printf("Diagonal 1: %d%n", tempSum);

        //checks if the sum is equal to the previous sum, if yes, increments counter.
        if (tempSum == tempPreviousSum){
            magicSquareCounter++;
        }
        tempPreviousSum = tempSum;
        tempSum = 0;

        //Print and calculate diagonal 2
        for (int i = 0; i < side; i++){
            tempSum += box[i][side-(i+1)];
        }
        System.out.printf("Diagonal 2: %d%n", tempSum);

        //checks if the sum is equal to the previous sum, if yes, increments counter.
        if (tempSum == tempPreviousSum){
            magicSquareCounter++;
        }

        if (magicSquareCounter == (side+side+1)){
            System.out.print("It's a magic square!");
        }

    }//main
}//class
//javac NumberSquare.java
//java NumberSquare 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
//java NumberSquare 16 3 2 13 5 10 11 8 9 6 7 12 4 15 14 1
//java NumberSquare 7 12 1 14 2 13 8 11 16 3 10 5 9 6 15 4
//java NumberSquare 2 7 6 9 5 1 4 3 8
 //java NumberSquare 17 24 1 8 15 23 5 7 14 16 4 6 13 20 22 10 12 19 21 3 11 18 25 2 9
//java NumberSquare 17 24 1 8 15 23 5 7 14 16 4 6 13 20 23 10 12 19 21 3 11 18 25 2 9
